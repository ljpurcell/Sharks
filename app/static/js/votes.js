"use strict";function submitVotes(e,t,o){var s=votesValidator([document.getElementById("playerMenu1").value,document.getElementById("playerMenu2").value,document.getElementById("playerMenu3").value],[parseInt(document.getElementById("votesMenu1").value),parseInt(document.getElementById("votesMenu2").value),parseInt(document.getElementById("votesMenu3").value)]);if(s.value){e={season:e,round:t,date:o,assignedVotes:s.votes};try{postVotesToApi(e)}catch(e){console.log(e)}}else invalidVotes(s.message)}function votesValidator(e,t){const o=e.filter(e=>Boolean(e)&&"Player"!==e),s=t.filter(Boolean);var a=s.reduce((e,t)=>e+t),e=e.map(e=>o.includes(e)),t=t.map(e=>s.includes(e)),n=new Set(o);return 3!==a?{value:!1,message:"Total votes '"+a+"' not equal to 3"}:o.length===s.length&&arraysAreSame(e,t)?o.length!==n.size?{value:!1,message:"You have listed a player more than once"}:{value:!0,message:"Your votes were recorded successfully",votes:o.map((e,t)=>({player:e,votes:s[t]}))}:{value:!1,message:"Mismatch of players and assigned votes"}}async function postVotesToApi(e){var t=await fetch("/record-votes",{method:"POST",mode:"cors",cache:"no-cache",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t)throw invalidVotes(t.message),new Error(t.status);await t.json();Swal.fire({icon:"success",title:"Nice!",text:e.message,timer:4e3,showConfirmButton:!1}).then(()=>{window.location="/"})}function invalidVotes(e){Swal.fire({icon:"error",title:"Woops!",text:e})}function arraysAreSame(e,t){return JSON.stringify(e)===JSON.stringify(t)}